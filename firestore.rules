rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper to check if user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper to check if the user is admin
    function isAdmin() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    // Helper to check if the user is user
        function isUser() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'user';
    }

    // USERS: Admin can read and edit any user
     match /users/{userId} {
      allow create, read: if true;
      allow write, read, update: if isAdmin() || isUser();    
      allow delete: if isAdmin();
    }

    // ORDERS: Admin can create order for self and read all orders
    match /orders/{orderId} {
      // Allow creating orders if userID matches the authenticated user
      allow create: if isUser() || isAdmin();

      allow read, update: if isAdmin() || isUser();
    }

    // MENU ITEMS: Admin can read/write menu items
    match /menuItems/{itemId} {
      allow create, update, delete: if isAdmin();
      allow read: if isAdmin() || isUser();
    }
    //Coin Transfer
     match /coinTransfers/{docId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
    }
  }
}